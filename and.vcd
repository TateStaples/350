$date
	Fri Jan 26 15:25:34 2024
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module alu_tb $end
$var wire 32 ! Res [31:0] $end
$var wire 1 " OVF $end
$var wire 1 # NE $end
$var wire 1 $ LT $end
$var reg 32 % A [31:0] $end
$var reg 5 & ALU_OP [4:0] $end
$var reg 32 ' B [31:0] $end
$var reg 1 ( ExpLT $end
$var reg 1 ) ExpNE $end
$var reg 1 * ExpOVF $end
$var reg 32 + ExpRes [31:0] $end
$var reg 5 , Shift_Amt [4:0] $end
$var reg 128 - actFileName [127:0] $end
$var reg 128 . diffFileName [127:0] $end
$var reg 128 / expFileName [127:0] $end
$var reg 128 0 testName [127:0] $end
$var integer 32 1 actFile [31:0] $end
$var integer 32 2 diffFile [31:0] $end
$var integer 32 3 errors [31:0] $end
$var integer 32 4 expFile [31:0] $end
$var integer 32 5 expScan [31:0] $end
$var integer 32 6 tests [31:0] $end
$scope module Tester $end
$var wire 5 7 ctrl_ALUopcode [4:0] $end
$var wire 5 8 ctrl_shiftamt [4:0] $end
$var wire 32 9 data_operandA [31:0] $end
$var wire 32 : data_operandB [31:0] $end
$var wire 1 " overflow $end
$var wire 32 ; updated_operandB [31:0] $end
$var wire 32 < sum [31:0] $end
$var wire 1 # isNotEqual $end
$var wire 1 $ isLessThan $end
$var wire 32 = data_result [31:0] $end
$var wire 1 > carry_out $end
$var wire 32 ? SRA [31:0] $end
$var wire 32 @ SLL [31:0] $end
$var wire 32 A OR [31:0] $end
$var wire 32 B AND [31:0] $end
$scope module adder $end
$var wire 1 C c16 $end
$var wire 1 D c24 $end
$var wire 1 E c8 $end
$var wire 1 F carry_in $end
$var wire 1 > carry_out $end
$var wire 32 G num1 [31:0] $end
$var wire 1 H w1 $end
$var wire 1 I w10 $end
$var wire 1 J w2 $end
$var wire 1 K w3 $end
$var wire 1 L w4 $end
$var wire 1 M w5 $end
$var wire 1 N w6 $end
$var wire 1 O w7 $end
$var wire 1 P w8 $end
$var wire 1 Q w9 $end
$var wire 32 R sum [31:0] $end
$var wire 32 S num2 [31:0] $end
$var wire 1 T P3 $end
$var wire 1 U P2 $end
$var wire 1 V P1 $end
$var wire 1 W P0 $end
$var wire 1 X G3 $end
$var wire 1 Y G2 $end
$var wire 1 Z G1 $end
$var wire 1 [ G0 $end
$scope module block1 $end
$var wire 8 \ A [7:0] $end
$var wire 8 ] B [7:0] $end
$var wire 1 F carry_in $end
$var wire 8 ^ out [7:0] $end
$var wire 8 _ carry [7:0] $end
$var wire 1 W Pblock $end
$var wire 8 ` P [7:0] $end
$var wire 1 [ Gblock $end
$var wire 8 a G [7:0] $end
$scope module and1 $end
$var wire 8 b num1 [7:0] $end
$var wire 8 c num2 [7:0] $end
$var wire 8 d out [7:0] $end
$upscope $end
$scope module la $end
$var wire 8 e P [7:0] $end
$var wire 1 F carry_in $end
$var wire 1 f cin $end
$var wire 1 g w1 $end
$var wire 1 h w10 $end
$var wire 1 i w11 $end
$var wire 1 j w12 $end
$var wire 1 k w13 $end
$var wire 1 l w14 $end
$var wire 1 m w15 $end
$var wire 1 n w16 $end
$var wire 1 o w17 $end
$var wire 1 p w18 $end
$var wire 1 q w19 $end
$var wire 1 r w2 $end
$var wire 1 s w20 $end
$var wire 1 t w21 $end
$var wire 1 u w22 $end
$var wire 1 v w23 $end
$var wire 1 w w24 $end
$var wire 1 x w25 $end
$var wire 1 y w26 $end
$var wire 1 z w27 $end
$var wire 1 { w28 $end
$var wire 1 | w3 $end
$var wire 1 } w4 $end
$var wire 1 ~ w5 $end
$var wire 1 !" w6 $end
$var wire 1 "" w7 $end
$var wire 1 #" w8 $end
$var wire 1 $" w9 $end
$var wire 8 %" G [7:0] $end
$var wire 8 &" C [7:0] $end
$upscope $end
$scope module or1 $end
$var wire 8 '" num1 [7:0] $end
$var wire 8 (" num2 [7:0] $end
$var wire 8 )" out [7:0] $end
$upscope $end
$scope module pgb $end
$var wire 1 [ G $end
$var wire 1 W P $end
$var wire 8 *" g [7:0] $end
$var wire 8 +" p [7:0] $end
$var wire 1 ," w1 $end
$var wire 1 -" w2 $end
$var wire 1 ." w3 $end
$var wire 1 /" w4 $end
$var wire 1 0" w5 $end
$var wire 1 1" w6 $end
$var wire 1 2" w7 $end
$upscope $end
$upscope $end
$scope module block2 $end
$var wire 8 3" A [7:0] $end
$var wire 8 4" B [7:0] $end
$var wire 1 E carry_in $end
$var wire 8 5" out [7:0] $end
$var wire 8 6" carry [7:0] $end
$var wire 1 V Pblock $end
$var wire 8 7" P [7:0] $end
$var wire 1 Z Gblock $end
$var wire 8 8" G [7:0] $end
$scope module and1 $end
$var wire 8 9" num1 [7:0] $end
$var wire 8 :" num2 [7:0] $end
$var wire 8 ;" out [7:0] $end
$upscope $end
$scope module la $end
$var wire 8 <" P [7:0] $end
$var wire 1 E carry_in $end
$var wire 1 =" cin $end
$var wire 1 >" w1 $end
$var wire 1 ?" w10 $end
$var wire 1 @" w11 $end
$var wire 1 A" w12 $end
$var wire 1 B" w13 $end
$var wire 1 C" w14 $end
$var wire 1 D" w15 $end
$var wire 1 E" w16 $end
$var wire 1 F" w17 $end
$var wire 1 G" w18 $end
$var wire 1 H" w19 $end
$var wire 1 I" w2 $end
$var wire 1 J" w20 $end
$var wire 1 K" w21 $end
$var wire 1 L" w22 $end
$var wire 1 M" w23 $end
$var wire 1 N" w24 $end
$var wire 1 O" w25 $end
$var wire 1 P" w26 $end
$var wire 1 Q" w27 $end
$var wire 1 R" w28 $end
$var wire 1 S" w3 $end
$var wire 1 T" w4 $end
$var wire 1 U" w5 $end
$var wire 1 V" w6 $end
$var wire 1 W" w7 $end
$var wire 1 X" w8 $end
$var wire 1 Y" w9 $end
$var wire 8 Z" G [7:0] $end
$var wire 8 [" C [7:0] $end
$upscope $end
$scope module or1 $end
$var wire 8 \" num1 [7:0] $end
$var wire 8 ]" num2 [7:0] $end
$var wire 8 ^" out [7:0] $end
$upscope $end
$scope module pgb $end
$var wire 1 Z G $end
$var wire 1 V P $end
$var wire 8 _" g [7:0] $end
$var wire 8 `" p [7:0] $end
$var wire 1 a" w1 $end
$var wire 1 b" w2 $end
$var wire 1 c" w3 $end
$var wire 1 d" w4 $end
$var wire 1 e" w5 $end
$var wire 1 f" w6 $end
$var wire 1 g" w7 $end
$upscope $end
$upscope $end
$scope module block3 $end
$var wire 8 h" A [7:0] $end
$var wire 8 i" B [7:0] $end
$var wire 1 C carry_in $end
$var wire 8 j" out [7:0] $end
$var wire 8 k" carry [7:0] $end
$var wire 1 U Pblock $end
$var wire 8 l" P [7:0] $end
$var wire 1 Y Gblock $end
$var wire 8 m" G [7:0] $end
$scope module and1 $end
$var wire 8 n" num1 [7:0] $end
$var wire 8 o" num2 [7:0] $end
$var wire 8 p" out [7:0] $end
$upscope $end
$scope module la $end
$var wire 8 q" P [7:0] $end
$var wire 1 C carry_in $end
$var wire 1 r" cin $end
$var wire 1 s" w1 $end
$var wire 1 t" w10 $end
$var wire 1 u" w11 $end
$var wire 1 v" w12 $end
$var wire 1 w" w13 $end
$var wire 1 x" w14 $end
$var wire 1 y" w15 $end
$var wire 1 z" w16 $end
$var wire 1 {" w17 $end
$var wire 1 |" w18 $end
$var wire 1 }" w19 $end
$var wire 1 ~" w2 $end
$var wire 1 !# w20 $end
$var wire 1 "# w21 $end
$var wire 1 ## w22 $end
$var wire 1 $# w23 $end
$var wire 1 %# w24 $end
$var wire 1 &# w25 $end
$var wire 1 '# w26 $end
$var wire 1 (# w27 $end
$var wire 1 )# w28 $end
$var wire 1 *# w3 $end
$var wire 1 +# w4 $end
$var wire 1 ,# w5 $end
$var wire 1 -# w6 $end
$var wire 1 .# w7 $end
$var wire 1 /# w8 $end
$var wire 1 0# w9 $end
$var wire 8 1# G [7:0] $end
$var wire 8 2# C [7:0] $end
$upscope $end
$scope module or1 $end
$var wire 8 3# num1 [7:0] $end
$var wire 8 4# num2 [7:0] $end
$var wire 8 5# out [7:0] $end
$upscope $end
$scope module pgb $end
$var wire 1 Y G $end
$var wire 1 U P $end
$var wire 8 6# g [7:0] $end
$var wire 8 7# p [7:0] $end
$var wire 1 8# w1 $end
$var wire 1 9# w2 $end
$var wire 1 :# w3 $end
$var wire 1 ;# w4 $end
$var wire 1 <# w5 $end
$var wire 1 =# w6 $end
$var wire 1 ># w7 $end
$upscope $end
$upscope $end
$scope module block4 $end
$var wire 8 ?# A [7:0] $end
$var wire 8 @# B [7:0] $end
$var wire 1 D carry_in $end
$var wire 8 A# out [7:0] $end
$var wire 8 B# carry [7:0] $end
$var wire 1 T Pblock $end
$var wire 8 C# P [7:0] $end
$var wire 1 X Gblock $end
$var wire 8 D# G [7:0] $end
$scope module and1 $end
$var wire 8 E# num1 [7:0] $end
$var wire 8 F# num2 [7:0] $end
$var wire 8 G# out [7:0] $end
$upscope $end
$scope module la $end
$var wire 8 H# P [7:0] $end
$var wire 1 D carry_in $end
$var wire 1 I# cin $end
$var wire 1 J# w1 $end
$var wire 1 K# w10 $end
$var wire 1 L# w11 $end
$var wire 1 M# w12 $end
$var wire 1 N# w13 $end
$var wire 1 O# w14 $end
$var wire 1 P# w15 $end
$var wire 1 Q# w16 $end
$var wire 1 R# w17 $end
$var wire 1 S# w18 $end
$var wire 1 T# w19 $end
$var wire 1 U# w2 $end
$var wire 1 V# w20 $end
$var wire 1 W# w21 $end
$var wire 1 X# w22 $end
$var wire 1 Y# w23 $end
$var wire 1 Z# w24 $end
$var wire 1 [# w25 $end
$var wire 1 \# w26 $end
$var wire 1 ]# w27 $end
$var wire 1 ^# w28 $end
$var wire 1 _# w3 $end
$var wire 1 `# w4 $end
$var wire 1 a# w5 $end
$var wire 1 b# w6 $end
$var wire 1 c# w7 $end
$var wire 1 d# w8 $end
$var wire 1 e# w9 $end
$var wire 8 f# G [7:0] $end
$var wire 8 g# C [7:0] $end
$upscope $end
$scope module or1 $end
$var wire 8 h# num1 [7:0] $end
$var wire 8 i# num2 [7:0] $end
$var wire 8 j# out [7:0] $end
$upscope $end
$scope module pgb $end
$var wire 1 X G $end
$var wire 1 T P $end
$var wire 8 k# g [7:0] $end
$var wire 8 l# p [7:0] $end
$var wire 1 m# w1 $end
$var wire 1 n# w2 $end
$var wire 1 o# w3 $end
$var wire 1 p# w4 $end
$var wire 1 q# w5 $end
$var wire 1 r# w6 $end
$var wire 1 s# w7 $end
$upscope $end
$upscope $end
$upscope $end
$scope module and1 $end
$var wire 32 t# num1 [31:0] $end
$var wire 32 u# num2 [31:0] $end
$var wire 32 v# out [31:0] $end
$upscope $end
$scope module mux1 $end
$var wire 32 w# in0 [31:0] $end
$var wire 32 x# in1 [31:0] $end
$var wire 32 y# in2 [31:0] $end
$var wire 32 z# in6 [31:0] $end
$var wire 32 {# in7 [31:0] $end
$var wire 3 |# select [2:0] $end
$var wire 32 }# w2 [31:0] $end
$var wire 32 ~# w1 [31:0] $end
$var wire 32 !$ out [31:0] $end
$var wire 32 "$ in5 [31:0] $end
$var wire 32 #$ in4 [31:0] $end
$var wire 32 $$ in3 [31:0] $end
$scope module m1 $end
$var wire 32 %$ in0 [31:0] $end
$var wire 32 &$ in1 [31:0] $end
$var wire 32 '$ in2 [31:0] $end
$var wire 2 ($ select [1:0] $end
$var wire 32 )$ w2 [31:0] $end
$var wire 32 *$ w1 [31:0] $end
$var wire 32 +$ out [31:0] $end
$var wire 32 ,$ in3 [31:0] $end
$scope module m1 $end
$var wire 32 -$ in0 [31:0] $end
$var wire 32 .$ in1 [31:0] $end
$var wire 1 /$ select $end
$var wire 32 0$ out [31:0] $end
$upscope $end
$scope module m2 $end
$var wire 32 1$ in0 [31:0] $end
$var wire 1 2$ select $end
$var wire 32 3$ out [31:0] $end
$var wire 32 4$ in1 [31:0] $end
$upscope $end
$scope module m3 $end
$var wire 32 5$ in0 [31:0] $end
$var wire 32 6$ in1 [31:0] $end
$var wire 1 7$ select $end
$var wire 32 8$ out [31:0] $end
$upscope $end
$upscope $end
$scope module m2 $end
$var wire 32 9$ in2 [31:0] $end
$var wire 32 :$ in3 [31:0] $end
$var wire 2 ;$ select [1:0] $end
$var wire 32 <$ w2 [31:0] $end
$var wire 32 =$ w1 [31:0] $end
$var wire 32 >$ out [31:0] $end
$var wire 32 ?$ in1 [31:0] $end
$var wire 32 @$ in0 [31:0] $end
$scope module m1 $end
$var wire 1 A$ select $end
$var wire 32 B$ out [31:0] $end
$var wire 32 C$ in1 [31:0] $end
$var wire 32 D$ in0 [31:0] $end
$upscope $end
$scope module m2 $end
$var wire 32 E$ in0 [31:0] $end
$var wire 32 F$ in1 [31:0] $end
$var wire 1 G$ select $end
$var wire 32 H$ out [31:0] $end
$upscope $end
$scope module m3 $end
$var wire 32 I$ in0 [31:0] $end
$var wire 32 J$ in1 [31:0] $end
$var wire 1 K$ select $end
$var wire 32 L$ out [31:0] $end
$upscope $end
$upscope $end
$scope module m3 $end
$var wire 32 M$ in0 [31:0] $end
$var wire 32 N$ in1 [31:0] $end
$var wire 1 O$ select $end
$var wire 32 P$ out [31:0] $end
$upscope $end
$upscope $end
$scope module or1 $end
$var wire 32 Q$ num1 [31:0] $end
$var wire 32 R$ num2 [31:0] $end
$var wire 32 S$ out [31:0] $end
$upscope $end
$scope module or2 $end
$var wire 32 T$ in [31:0] $end
$var wire 1 # out $end
$var wire 1 U$ w1 $end
$var wire 1 V$ w2 $end
$var wire 1 W$ w3 $end
$var wire 1 X$ w4 $end
$upscope $end
$scope module sra $end
$var wire 32 Y$ in [31:0] $end
$var wire 5 Z$ shift [4:0] $end
$var wire 32 [$ shift_8 [31:0] $end
$var wire 32 \$ shift_4 [31:0] $end
$var wire 32 ]$ shift_2 [31:0] $end
$var wire 32 ^$ shift_1 [31:0] $end
$var wire 32 _$ out [31:0] $end
$scope module s1 $end
$var wire 1 `$ control $end
$var wire 32 a$ in [31:0] $end
$var wire 32 b$ out [31:0] $end
$upscope $end
$scope module s2 $end
$var wire 1 c$ control $end
$var wire 32 d$ in [31:0] $end
$var wire 32 e$ out [31:0] $end
$upscope $end
$scope module s3 $end
$var wire 1 f$ control $end
$var wire 32 g$ in [31:0] $end
$var wire 32 h$ out [31:0] $end
$upscope $end
$scope module s4 $end
$var wire 1 i$ control $end
$var wire 32 j$ in [31:0] $end
$var wire 32 k$ out [31:0] $end
$upscope $end
$scope module s5 $end
$var wire 1 l$ control $end
$var wire 32 m$ in [31:0] $end
$var wire 32 n$ out [31:0] $end
$upscope $end
$upscope $end
$scope module srl $end
$var wire 32 o$ in [31:0] $end
$var wire 5 p$ shift [4:0] $end
$var wire 32 q$ w4 [31:0] $end
$var wire 32 r$ w3 [31:0] $end
$var wire 32 s$ w2 [31:0] $end
$var wire 32 t$ w1 [31:0] $end
$var wire 32 u$ out [31:0] $end
$scope module s1 $end
$var wire 1 v$ control $end
$var wire 32 w$ in [31:0] $end
$var wire 32 x$ out [31:0] $end
$upscope $end
$scope module s2 $end
$var wire 1 y$ control $end
$var wire 32 z$ in [31:0] $end
$var wire 32 {$ out [31:0] $end
$upscope $end
$scope module s3 $end
$var wire 32 |$ in [31:0] $end
$var wire 1 }$ shift $end
$var wire 32 ~$ out [31:0] $end
$upscope $end
$scope module s4 $end
$var wire 1 !% control $end
$var wire 32 "% in [31:0] $end
$var wire 32 #% out [31:0] $end
$upscope $end
$scope module s5 $end
$var wire 1 $% control $end
$var wire 32 %% in [31:0] $end
$var wire 32 &% out [31:0] $end
$upscope $end
$upscope $end
$scope module sub_flip $end
$var wire 1 '% control $end
$var wire 32 (% in [31:0] $end
$var wire 32 )% out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module alu_tb $end
$scope module Tester $end
$scope module adder $end
$scope module block1 $end
$scope module and1 $end
$upscope $end
$scope module la $end
$upscope $end
$scope module or1 $end
$upscope $end
$scope module pgb $end
$upscope $end
$upscope $end
$scope module block2 $end
$scope module and1 $end
$upscope $end
$scope module la $end
$upscope $end
$scope module or1 $end
$upscope $end
$scope module pgb $end
$upscope $end
$upscope $end
$scope module block3 $end
$scope module and1 $end
$upscope $end
$scope module la $end
$upscope $end
$scope module or1 $end
$upscope $end
$scope module pgb $end
$upscope $end
$upscope $end
$scope module block4 $end
$scope module and1 $end
$upscope $end
$scope module la $end
$upscope $end
$scope module or1 $end
$upscope $end
$scope module pgb $end
$upscope $end
$upscope $end
$upscope $end
$scope module and1 $end
$upscope $end
$scope module mux1 $end
$scope module m1 $end
$scope module m1 $end
$upscope $end
$scope module m2 $end
$upscope $end
$scope module m3 $end
$upscope $end
$upscope $end
$scope module m2 $end
$scope module m1 $end
$upscope $end
$scope module m2 $end
$upscope $end
$scope module m3 $end
$upscope $end
$upscope $end
$scope module m3 $end
$upscope $end
$upscope $end
$scope module or1 $end
$upscope $end
$scope module or2 $end
$upscope $end
$scope module sra $end
$scope module s1 $end
$upscope $end
$scope module s2 $end
$upscope $end
$scope module s3 $end
$upscope $end
$scope module s4 $end
$upscope $end
$scope module s5 $end
$upscope $end
$upscope $end
$scope module srl $end
$scope module s1 $end
$upscope $end
$scope module s2 $end
$upscope $end
$scope module s3 $end
$upscope $end
$scope module s4 $end
$upscope $end
$scope module s5 $end
$upscope $end
$upscope $end
$scope module sub_flip $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1 )%
b1 (%
0'%
b0 &%
b0 %%
0$%
b0 #%
b0 "%
0!%
b0 ~$
0}$
b0 |$
b0 {$
b0 z$
0y$
b0 x$
b0 w$
0v$
b0 u$
b0 t$
b0 s$
b0 r$
b0 q$
b0 p$
b0 o$
b0 n$
b0 m$
0l$
b0 k$
b0 j$
0i$
b0 h$
b0 g$
0f$
b0 e$
b0 d$
0c$
b0 b$
b0 a$
0`$
b0 _$
b0 ^$
b0 ]$
b0 \$
b0 [$
b0 Z$
b0 Y$
0X$
0W$
0V$
1U$
b11 T$
b1 S$
b1 R$
b0 Q$
b0 P$
0O$
b0 N$
b0 M$
b0 L$
1K$
b0 J$
b0 I$
b0 H$
0G$
b1 F$
b0 E$
b0 D$
b0 C$
b0 B$
0A$
b0 @$
b0 ?$
b0 >$
b0 =$
b0 <$
b10 ;$
b1 :$
b0 9$
b0 8$
17$
b0 6$
b11 5$
b1 4$
b0 3$
02$
b0 1$
b11 0$
0/$
b11 .$
b11 -$
b1 ,$
b0 +$
b11 *$
b0 )$
b10 ($
b0 '$
b11 &$
b11 %$
b1 $$
b0 #$
b0 "$
b0 !$
b0 ~#
b0 }#
b10 |#
b1 {#
b0 z#
b0 y#
b11 x#
b11 w#
b0 v#
b1 u#
b0 t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
b0 l#
b0 k#
b0 j#
b0 i#
b0 h#
b0 g#
b0 f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
zI#
b0 H#
b0 G#
b0 F#
b0 E#
b0 D#
b0 C#
b0 B#
b0 A#
b0 @#
b0 ?#
0>#
0=#
0<#
0;#
0:#
09#
08#
b0 7#
b0 6#
b0 5#
b0 4#
b0 3#
b0 2#
b0 1#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
zr"
b0 q"
b0 p"
b0 o"
b0 n"
b0 m"
b0 l"
b0 k"
b0 j"
b0 i"
b0 h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
b0 `"
b0 _"
b0 ^"
b0 ]"
b0 \"
b0 ["
b0 Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
z="
b0 <"
b0 ;"
b0 :"
b0 9"
b0 8"
b0 7"
b0 6"
b0 5"
b0 4"
b0 3"
02"
01"
00"
0/"
0."
0-"
0,"
b0 +"
b1 *"
b1 )"
b1 ("
b0 '"
b10 &"
b1 %"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
zf
b0 e
b0 d
b1 c
b0 b
b1 a
b0 `
b10 _
b11 ^
b1 ]
b0 \
0[
0Z
0Y
0X
0W
0V
0U
0T
b1 S
b11 R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
b0 G
0F
0E
0D
0C
b0 B
b1 A
b0 @
b0 ?
0>
b0 =
b11 <
b1 ;
b1 :
b0 9
b0 8
b10 7
b0 6
b1000 5
b10000000000000000000000000000011 4
b0 3
b10000000000000000000000000000101 2
b10000000000000000000000000000100 1
b11000010110111001100100 0
b110000101101110011001000101111101100101011110000111000000101110011000110111001101110110 /
b11000010110111001100100010111110110010001101001011001100110011000101110011000110111001101110110 .
b110000101101110011001000101111101100001011000110111010001110101011000010110110000101110011000110111001101110110 -
b0 ,
b0 +
0*
1)
1(
b1 '
b10 &
b0 %
0$
1#
0"
b0 !
$end
#100
b1 =$
b1 B$
b1 I$
b1 ?
b1 "$
b1 ?$
b1 C$
b1 _$
b1 n$
b1 @
b1 #$
b1 @$
b1 D$
b1 u$
b1 &%
b1 [$
b1 k$
b1 m$
b1 q$
b1 #%
b1 %%
b1 \$
b1 h$
b1 j$
b1 r$
b1 ~$
b1 "%
xg
b1 !
b1 =
b1 !$
b1 P$
b10 *$
b10 0$
b10 5$
b1 ~#
b1 +$
b1 8$
b1 M$
b1 ]$
b1 e$
b1 g$
b1 s$
b1 {$
b1 |$
b10 <
b10 R
b10 w#
b10 x#
b10 %$
b10 &$
b10 -$
b10 .$
b10 T$
b10 ^
b1 `
b1 d
b1 e
b1 +"
b1 )$
b1 3$
b1 6$
b1 B
b1 v#
b1 y#
b1 '$
b1 1$
b1 }#
b1 >$
b1 L$
b1 N$
b1 ^$
b1 b$
b1 d$
b1 t$
b1 x$
b1 z$
b1 \
b1 b
b1 '"
b1 <$
b1 H$
b1 J$
b1 +
b1 %
b1 9
b1 G
b1 t#
b1 z#
b1 9$
b1 E$
b1 Q$
b1 Y$
b1 a$
b1 o$
b1 w$
b1 6
#200
b10 =$
b10 B$
b10 I$
b10 ?
b10 "$
b10 ?$
b10 C$
b10 _$
b10 n$
b10 @
b10 #$
b10 @$
b10 D$
b10 u$
b10 &%
b10 [$
b10 k$
b10 m$
b10 q$
b10 #%
b10 %%
b10 \$
b10 h$
b10 j$
b10 r$
b10 ~$
b10 "%
0g
b110 _
b110 &"
b0 !
b0 =
b0 !$
b0 P$
b101 *$
b101 0$
b101 5$
b0 ~#
b0 +$
b0 8$
b0 M$
b10 ]$
b10 e$
b10 g$
b10 s$
b10 {$
b10 |$
b101 <
b101 R
b101 w#
b101 x#
b101 %$
b101 &$
b101 -$
b101 .$
b101 T$
b101 ^
b0 `
b0 d
b0 e
b0 +"
b11 a
b11 %"
b11 )"
b11 *"
b0 )$
b0 3$
b0 6$
b0 B
b0 v#
b0 y#
b0 '$
b0 1$
b10 }#
b10 >$
b10 L$
b10 N$
b11 A
b11 $$
b11 ,$
b11 4$
b11 S$
b10 ^$
b10 b$
b10 d$
b10 t$
b10 x$
b10 z$
b10 \
b10 b
b10 '"
b10 <$
b10 H$
b10 J$
b0 +
b10 %
b10 9
b10 G
b10 t#
b10 z#
b10 9$
b10 E$
b10 Q$
b10 Y$
b10 a$
b10 o$
b10 w$
b10 6
#300
b110 =$
b110 B$
b110 I$
b110 ?
b110 "$
b110 ?$
b110 C$
b110 _$
b110 n$
b110 @
b110 #$
b110 @$
b110 D$
b110 u$
b110 &%
b110 [$
b110 k$
b110 m$
b110 q$
b110 #%
b110 %%
b110 \$
b110 h$
b110 j$
b110 r$
b110 ~$
b110 "%
b1110 _
b1110 &"
b1001 *$
b1001 0$
b1001 5$
b110 ]$
b110 e$
b110 g$
b110 s$
b110 {$
b110 |$
b1001 <
b1001 R
b1001 w#
b1001 x#
b1001 %$
b1001 &$
b1001 -$
b1001 .$
b1001 T$
b1001 ^
b111 a
b111 %"
b111 )"
b111 *"
b110 }#
b110 >$
b110 L$
b110 N$
b111 A
b111 $$
b111 ,$
b111 4$
b111 S$
b110 ^$
b110 b$
b110 d$
b110 t$
b110 x$
b110 z$
b110 \
b110 b
b110 '"
b110 <$
b110 H$
b110 J$
b110 %
b110 9
b110 G
b110 t#
b110 z#
b110 9$
b110 E$
b110 Q$
b110 Y$
b110 a$
b110 o$
b110 w$
b11 6
#400
b11 =$
b11 B$
b11 I$
b11 ?
b11 "$
b11 ?$
b11 C$
b11 _$
b11 n$
b11 @
b11 #$
b11 @$
b11 D$
b11 u$
b11 &%
b11 [$
b11 k$
b11 m$
b11 q$
b11 #%
b11 %%
b11 \$
b11 h$
b11 j$
b11 r$
b11 ~$
b11 "%
xg
b110 _
b110 &"
b1 !
b1 =
b1 !$
b1 P$
b100 *$
b100 0$
b100 5$
b1 ~#
b1 +$
b1 8$
b1 M$
b11 ]$
b11 e$
b11 g$
b11 s$
b11 {$
b11 |$
b100 <
b100 R
b100 w#
b100 x#
b100 %$
b100 &$
b100 -$
b100 .$
b100 T$
b100 ^
b1 `
b1 d
b1 e
b1 +"
b11 a
b11 %"
b11 )"
b11 *"
b1 )$
b1 3$
b1 6$
b1 B
b1 v#
b1 y#
b1 '$
b1 1$
b11 }#
b11 >$
b11 L$
b11 N$
b11 A
b11 $$
b11 ,$
b11 4$
b11 S$
b11 ^$
b11 b$
b11 d$
b11 t$
b11 x$
b11 z$
b11 \
b11 b
b11 '"
b11 <$
b11 H$
b11 J$
b1 +
b11 %
b11 9
b11 G
b11 t#
b11 z#
b11 9$
b11 E$
b11 Q$
b11 Y$
b11 a$
b11 o$
b11 w$
b100 6
#500
b11111111111111111111111111111111 5
b101 6
#1500
