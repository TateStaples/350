$date
	Tue Jan 30 14:41:33 2024
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module alu_tb $end
$var wire 32 ! Res [31:0] $end
$var wire 1 " OVF $end
$var wire 1 # NE $end
$var wire 1 $ LT $end
$var reg 32 % A [31:0] $end
$var reg 5 & ALU_OP [4:0] $end
$var reg 32 ' B [31:0] $end
$var reg 1 ( ExpLT $end
$var reg 1 ) ExpNE $end
$var reg 1 * ExpOVF $end
$var reg 32 + ExpRes [31:0] $end
$var reg 5 , Shift_Amt [4:0] $end
$var reg 128 - actFileName [127:0] $end
$var reg 128 . diffFileName [127:0] $end
$var reg 128 / expFileName [127:0] $end
$var reg 128 0 testName [127:0] $end
$var integer 32 1 actFile [31:0] $end
$var integer 32 2 diffFile [31:0] $end
$var integer 32 3 errors [31:0] $end
$var integer 32 4 expFile [31:0] $end
$var integer 32 5 expScan [31:0] $end
$var integer 32 6 tests [31:0] $end
$scope module Tester $end
$var wire 5 7 ctrl_ALUopcode [4:0] $end
$var wire 5 8 ctrl_shiftamt [4:0] $end
$var wire 32 9 data_operandA [31:0] $end
$var wire 32 : data_operandB [31:0] $end
$var wire 1 # isNotEqual $end
$var wire 1 ; w1 $end
$var wire 1 < w2 $end
$var wire 1 = w3 $end
$var wire 1 > w4 $end
$var wire 32 ? updated_operandB [31:0] $end
$var wire 32 @ sum [31:0] $end
$var wire 1 " overflow $end
$var wire 1 $ isLessThan $end
$var wire 32 A data_result [31:0] $end
$var wire 1 B carry_out $end
$var wire 1 C carry_in $end
$var wire 32 D SRA [31:0] $end
$var wire 32 E SLL [31:0] $end
$var wire 32 F OR [31:0] $end
$var wire 32 G AND [31:0] $end
$scope module adder $end
$var wire 1 H c16 $end
$var wire 1 I c24 $end
$var wire 1 J c8 $end
$var wire 1 C carry_in $end
$var wire 1 B carry_out $end
$var wire 32 K num1 [31:0] $end
$var wire 1 L w1 $end
$var wire 1 M w10 $end
$var wire 1 N w2 $end
$var wire 1 O w3 $end
$var wire 1 P w4 $end
$var wire 1 Q w5 $end
$var wire 1 R w6 $end
$var wire 1 S w7 $end
$var wire 1 T w8 $end
$var wire 1 U w9 $end
$var wire 32 V sum [31:0] $end
$var wire 32 W num2 [31:0] $end
$var wire 1 X P3 $end
$var wire 1 Y P2 $end
$var wire 1 Z P1 $end
$var wire 1 [ P0 $end
$var wire 1 \ G3 $end
$var wire 1 ] G2 $end
$var wire 1 ^ G1 $end
$var wire 1 _ G0 $end
$scope module block1 $end
$var wire 8 ` A [7:0] $end
$var wire 8 a B [7:0] $end
$var wire 1 C carry_in $end
$var wire 8 b out [7:0] $end
$var wire 8 c carry [7:0] $end
$var wire 1 [ Pblock $end
$var wire 8 d P [7:0] $end
$var wire 1 _ Gblock $end
$var wire 8 e G [7:0] $end
$scope module and1 $end
$var wire 8 f num1 [7:0] $end
$var wire 8 g num2 [7:0] $end
$var wire 8 h out [7:0] $end
$upscope $end
$scope module la $end
$var wire 8 i G [7:0] $end
$var wire 1 C cin $end
$var wire 1 j w1 $end
$var wire 1 k w10 $end
$var wire 1 l w11 $end
$var wire 1 m w12 $end
$var wire 1 n w13 $end
$var wire 1 o w14 $end
$var wire 1 p w15 $end
$var wire 1 q w16 $end
$var wire 1 r w17 $end
$var wire 1 s w18 $end
$var wire 1 t w19 $end
$var wire 1 u w2 $end
$var wire 1 v w20 $end
$var wire 1 w w21 $end
$var wire 1 x w22 $end
$var wire 1 y w23 $end
$var wire 1 z w24 $end
$var wire 1 { w25 $end
$var wire 1 | w26 $end
$var wire 1 } w27 $end
$var wire 1 ~ w28 $end
$var wire 1 !" w3 $end
$var wire 1 "" w4 $end
$var wire 1 #" w5 $end
$var wire 1 $" w6 $end
$var wire 1 %" w7 $end
$var wire 1 &" w8 $end
$var wire 1 '" w9 $end
$var wire 8 (" P [7:0] $end
$var wire 8 )" C [7:0] $end
$upscope $end
$scope module or1 $end
$var wire 8 *" num1 [7:0] $end
$var wire 8 +" num2 [7:0] $end
$var wire 8 ," out [7:0] $end
$upscope $end
$scope module pgb $end
$var wire 1 _ G $end
$var wire 1 [ P $end
$var wire 8 -" g [7:0] $end
$var wire 8 ." p [7:0] $end
$var wire 1 /" w1 $end
$var wire 1 0" w2 $end
$var wire 1 1" w3 $end
$var wire 1 2" w4 $end
$var wire 1 3" w5 $end
$var wire 1 4" w6 $end
$var wire 1 5" w7 $end
$upscope $end
$upscope $end
$scope module block2 $end
$var wire 8 6" A [7:0] $end
$var wire 8 7" B [7:0] $end
$var wire 1 J carry_in $end
$var wire 8 8" out [7:0] $end
$var wire 8 9" carry [7:0] $end
$var wire 1 Z Pblock $end
$var wire 8 :" P [7:0] $end
$var wire 1 ^ Gblock $end
$var wire 8 ;" G [7:0] $end
$scope module and1 $end
$var wire 8 <" num1 [7:0] $end
$var wire 8 =" num2 [7:0] $end
$var wire 8 >" out [7:0] $end
$upscope $end
$scope module la $end
$var wire 8 ?" G [7:0] $end
$var wire 1 J cin $end
$var wire 1 @" w1 $end
$var wire 1 A" w10 $end
$var wire 1 B" w11 $end
$var wire 1 C" w12 $end
$var wire 1 D" w13 $end
$var wire 1 E" w14 $end
$var wire 1 F" w15 $end
$var wire 1 G" w16 $end
$var wire 1 H" w17 $end
$var wire 1 I" w18 $end
$var wire 1 J" w19 $end
$var wire 1 K" w2 $end
$var wire 1 L" w20 $end
$var wire 1 M" w21 $end
$var wire 1 N" w22 $end
$var wire 1 O" w23 $end
$var wire 1 P" w24 $end
$var wire 1 Q" w25 $end
$var wire 1 R" w26 $end
$var wire 1 S" w27 $end
$var wire 1 T" w28 $end
$var wire 1 U" w3 $end
$var wire 1 V" w4 $end
$var wire 1 W" w5 $end
$var wire 1 X" w6 $end
$var wire 1 Y" w7 $end
$var wire 1 Z" w8 $end
$var wire 1 [" w9 $end
$var wire 8 \" P [7:0] $end
$var wire 8 ]" C [7:0] $end
$upscope $end
$scope module or1 $end
$var wire 8 ^" num1 [7:0] $end
$var wire 8 _" num2 [7:0] $end
$var wire 8 `" out [7:0] $end
$upscope $end
$scope module pgb $end
$var wire 1 ^ G $end
$var wire 1 Z P $end
$var wire 8 a" g [7:0] $end
$var wire 8 b" p [7:0] $end
$var wire 1 c" w1 $end
$var wire 1 d" w2 $end
$var wire 1 e" w3 $end
$var wire 1 f" w4 $end
$var wire 1 g" w5 $end
$var wire 1 h" w6 $end
$var wire 1 i" w7 $end
$upscope $end
$upscope $end
$scope module block3 $end
$var wire 8 j" A [7:0] $end
$var wire 8 k" B [7:0] $end
$var wire 1 H carry_in $end
$var wire 8 l" out [7:0] $end
$var wire 8 m" carry [7:0] $end
$var wire 1 Y Pblock $end
$var wire 8 n" P [7:0] $end
$var wire 1 ] Gblock $end
$var wire 8 o" G [7:0] $end
$scope module and1 $end
$var wire 8 p" num1 [7:0] $end
$var wire 8 q" num2 [7:0] $end
$var wire 8 r" out [7:0] $end
$upscope $end
$scope module la $end
$var wire 8 s" G [7:0] $end
$var wire 1 H cin $end
$var wire 1 t" w1 $end
$var wire 1 u" w10 $end
$var wire 1 v" w11 $end
$var wire 1 w" w12 $end
$var wire 1 x" w13 $end
$var wire 1 y" w14 $end
$var wire 1 z" w15 $end
$var wire 1 {" w16 $end
$var wire 1 |" w17 $end
$var wire 1 }" w18 $end
$var wire 1 ~" w19 $end
$var wire 1 !# w2 $end
$var wire 1 "# w20 $end
$var wire 1 ## w21 $end
$var wire 1 $# w22 $end
$var wire 1 %# w23 $end
$var wire 1 &# w24 $end
$var wire 1 '# w25 $end
$var wire 1 (# w26 $end
$var wire 1 )# w27 $end
$var wire 1 *# w28 $end
$var wire 1 +# w3 $end
$var wire 1 ,# w4 $end
$var wire 1 -# w5 $end
$var wire 1 .# w6 $end
$var wire 1 /# w7 $end
$var wire 1 0# w8 $end
$var wire 1 1# w9 $end
$var wire 8 2# P [7:0] $end
$var wire 8 3# C [7:0] $end
$upscope $end
$scope module or1 $end
$var wire 8 4# num1 [7:0] $end
$var wire 8 5# num2 [7:0] $end
$var wire 8 6# out [7:0] $end
$upscope $end
$scope module pgb $end
$var wire 1 ] G $end
$var wire 1 Y P $end
$var wire 8 7# g [7:0] $end
$var wire 8 8# p [7:0] $end
$var wire 1 9# w1 $end
$var wire 1 :# w2 $end
$var wire 1 ;# w3 $end
$var wire 1 <# w4 $end
$var wire 1 =# w5 $end
$var wire 1 ># w6 $end
$var wire 1 ?# w7 $end
$upscope $end
$upscope $end
$scope module block4 $end
$var wire 8 @# A [7:0] $end
$var wire 8 A# B [7:0] $end
$var wire 1 I carry_in $end
$var wire 8 B# out [7:0] $end
$var wire 8 C# carry [7:0] $end
$var wire 1 X Pblock $end
$var wire 8 D# P [7:0] $end
$var wire 1 \ Gblock $end
$var wire 8 E# G [7:0] $end
$scope module and1 $end
$var wire 8 F# num1 [7:0] $end
$var wire 8 G# num2 [7:0] $end
$var wire 8 H# out [7:0] $end
$upscope $end
$scope module la $end
$var wire 8 I# G [7:0] $end
$var wire 1 I cin $end
$var wire 1 J# w1 $end
$var wire 1 K# w10 $end
$var wire 1 L# w11 $end
$var wire 1 M# w12 $end
$var wire 1 N# w13 $end
$var wire 1 O# w14 $end
$var wire 1 P# w15 $end
$var wire 1 Q# w16 $end
$var wire 1 R# w17 $end
$var wire 1 S# w18 $end
$var wire 1 T# w19 $end
$var wire 1 U# w2 $end
$var wire 1 V# w20 $end
$var wire 1 W# w21 $end
$var wire 1 X# w22 $end
$var wire 1 Y# w23 $end
$var wire 1 Z# w24 $end
$var wire 1 [# w25 $end
$var wire 1 \# w26 $end
$var wire 1 ]# w27 $end
$var wire 1 ^# w28 $end
$var wire 1 _# w3 $end
$var wire 1 `# w4 $end
$var wire 1 a# w5 $end
$var wire 1 b# w6 $end
$var wire 1 c# w7 $end
$var wire 1 d# w8 $end
$var wire 1 e# w9 $end
$var wire 8 f# P [7:0] $end
$var wire 8 g# C [7:0] $end
$upscope $end
$scope module or1 $end
$var wire 8 h# num1 [7:0] $end
$var wire 8 i# num2 [7:0] $end
$var wire 8 j# out [7:0] $end
$upscope $end
$scope module pgb $end
$var wire 1 \ G $end
$var wire 1 X P $end
$var wire 8 k# g [7:0] $end
$var wire 8 l# p [7:0] $end
$var wire 1 m# w1 $end
$var wire 1 n# w2 $end
$var wire 1 o# w3 $end
$var wire 1 p# w4 $end
$var wire 1 q# w5 $end
$var wire 1 r# w6 $end
$var wire 1 s# w7 $end
$upscope $end
$upscope $end
$upscope $end
$scope module and1 $end
$var wire 32 t# num1 [31:0] $end
$var wire 32 u# num2 [31:0] $end
$var wire 32 v# out [31:0] $end
$upscope $end
$scope module mux1 $end
$var wire 32 w# in0 [31:0] $end
$var wire 32 x# in1 [31:0] $end
$var wire 32 y# in2 [31:0] $end
$var wire 32 z# in6 [31:0] $end
$var wire 32 {# in7 [31:0] $end
$var wire 3 |# select [2:0] $end
$var wire 32 }# w2 [31:0] $end
$var wire 32 ~# w1 [31:0] $end
$var wire 32 !$ out [31:0] $end
$var wire 32 "$ in5 [31:0] $end
$var wire 32 #$ in4 [31:0] $end
$var wire 32 $$ in3 [31:0] $end
$scope module m1 $end
$var wire 32 %$ in0 [31:0] $end
$var wire 32 &$ in1 [31:0] $end
$var wire 32 '$ in2 [31:0] $end
$var wire 2 ($ select [1:0] $end
$var wire 32 )$ w2 [31:0] $end
$var wire 32 *$ w1 [31:0] $end
$var wire 32 +$ out [31:0] $end
$var wire 32 ,$ in3 [31:0] $end
$scope module m1 $end
$var wire 32 -$ in0 [31:0] $end
$var wire 32 .$ in1 [31:0] $end
$var wire 1 /$ select $end
$var wire 32 0$ out [31:0] $end
$upscope $end
$scope module m2 $end
$var wire 32 1$ in0 [31:0] $end
$var wire 1 2$ select $end
$var wire 32 3$ out [31:0] $end
$var wire 32 4$ in1 [31:0] $end
$upscope $end
$scope module m3 $end
$var wire 32 5$ in0 [31:0] $end
$var wire 32 6$ in1 [31:0] $end
$var wire 1 7$ select $end
$var wire 32 8$ out [31:0] $end
$upscope $end
$upscope $end
$scope module m2 $end
$var wire 32 9$ in2 [31:0] $end
$var wire 32 :$ in3 [31:0] $end
$var wire 2 ;$ select [1:0] $end
$var wire 32 <$ w2 [31:0] $end
$var wire 32 =$ w1 [31:0] $end
$var wire 32 >$ out [31:0] $end
$var wire 32 ?$ in1 [31:0] $end
$var wire 32 @$ in0 [31:0] $end
$scope module m1 $end
$var wire 1 A$ select $end
$var wire 32 B$ out [31:0] $end
$var wire 32 C$ in1 [31:0] $end
$var wire 32 D$ in0 [31:0] $end
$upscope $end
$scope module m2 $end
$var wire 32 E$ in0 [31:0] $end
$var wire 32 F$ in1 [31:0] $end
$var wire 1 G$ select $end
$var wire 32 H$ out [31:0] $end
$upscope $end
$scope module m3 $end
$var wire 32 I$ in0 [31:0] $end
$var wire 32 J$ in1 [31:0] $end
$var wire 1 K$ select $end
$var wire 32 L$ out [31:0] $end
$upscope $end
$upscope $end
$scope module m3 $end
$var wire 32 M$ in0 [31:0] $end
$var wire 32 N$ in1 [31:0] $end
$var wire 1 O$ select $end
$var wire 32 P$ out [31:0] $end
$upscope $end
$upscope $end
$scope module or1 $end
$var wire 32 Q$ num1 [31:0] $end
$var wire 32 R$ num2 [31:0] $end
$var wire 32 S$ out [31:0] $end
$upscope $end
$scope module or2 $end
$var wire 32 T$ in [31:0] $end
$var wire 1 > out $end
$var wire 1 U$ w1 $end
$var wire 1 V$ w2 $end
$var wire 1 W$ w3 $end
$var wire 1 X$ w4 $end
$upscope $end
$scope module sra $end
$var wire 32 Y$ in [31:0] $end
$var wire 5 Z$ shift [4:0] $end
$var wire 32 [$ shift_8 [31:0] $end
$var wire 32 \$ shift_4 [31:0] $end
$var wire 32 ]$ shift_2 [31:0] $end
$var wire 32 ^$ shift_1 [31:0] $end
$var wire 32 _$ out [31:0] $end
$scope module s1 $end
$var wire 1 `$ control $end
$var wire 32 a$ in [31:0] $end
$var wire 32 b$ out [31:0] $end
$upscope $end
$scope module s2 $end
$var wire 1 c$ control $end
$var wire 32 d$ in [31:0] $end
$var wire 32 e$ out [31:0] $end
$upscope $end
$scope module s3 $end
$var wire 1 f$ control $end
$var wire 32 g$ in [31:0] $end
$var wire 32 h$ out [31:0] $end
$upscope $end
$scope module s4 $end
$var wire 1 i$ control $end
$var wire 32 j$ in [31:0] $end
$var wire 32 k$ out [31:0] $end
$upscope $end
$scope module s5 $end
$var wire 1 l$ control $end
$var wire 32 m$ in [31:0] $end
$var wire 32 n$ out [31:0] $end
$upscope $end
$upscope $end
$scope module srl $end
$var wire 32 o$ in [31:0] $end
$var wire 5 p$ shift [4:0] $end
$var wire 32 q$ w4 [31:0] $end
$var wire 32 r$ w3 [31:0] $end
$var wire 32 s$ w2 [31:0] $end
$var wire 32 t$ w1 [31:0] $end
$var wire 32 u$ out [31:0] $end
$scope module s1 $end
$var wire 1 v$ control $end
$var wire 32 w$ in [31:0] $end
$var wire 32 x$ out [31:0] $end
$upscope $end
$scope module s2 $end
$var wire 1 y$ control $end
$var wire 32 z$ in [31:0] $end
$var wire 32 {$ out [31:0] $end
$upscope $end
$scope module s3 $end
$var wire 32 |$ in [31:0] $end
$var wire 1 }$ shift $end
$var wire 32 ~$ out [31:0] $end
$upscope $end
$scope module s4 $end
$var wire 1 !% control $end
$var wire 32 "% in [31:0] $end
$var wire 32 #% out [31:0] $end
$upscope $end
$scope module s5 $end
$var wire 1 $% control $end
$var wire 32 %% in [31:0] $end
$var wire 32 &% out [31:0] $end
$upscope $end
$upscope $end
$scope module sub_flip $end
$var wire 1 '% control $end
$var wire 32 (% in [31:0] $end
$var wire 32 )% out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 )%
b0 (%
0'%
b0 &%
b0 %%
0$%
b0 #%
b0 "%
0!%
b0 ~$
0}$
b0 |$
b0 {$
b0 z$
0y$
b0 x$
b0 w$
0v$
b0 u$
b0 t$
b0 s$
b0 r$
b0 q$
b0 p$
b0 o$
b0 n$
b0 m$
0l$
b0 k$
b0 j$
0i$
b0 h$
b0 g$
0f$
b0 e$
b0 d$
0c$
b0 b$
b0 a$
0`$
b0 _$
b0 ^$
b0 ]$
b0 \$
b0 [$
b0 Z$
b0 Y$
0X$
0W$
0V$
0U$
b0 T$
b0 S$
b0 R$
b0 Q$
b0 P$
0O$
b0 N$
b0 M$
b0 L$
0K$
b0 J$
b0 I$
b0 H$
0G$
b0 F$
b0 E$
b0 D$
b0 C$
b0 B$
0A$
b0 @$
b0 ?$
b0 >$
b0 =$
b0 <$
b0 ;$
b0 :$
b0 9$
b0 8$
07$
b0 6$
b0 5$
b0 4$
b0 3$
02$
b0 1$
b0 0$
0/$
b0 .$
b0 -$
b0 ,$
b0 +$
b0 *$
b0 )$
b0 ($
b0 '$
b0 &$
b0 %$
b0 $$
b0 #$
b0 "$
b0 !$
b0 ~#
b0 }#
b0 |#
b0 {#
b0 z#
b0 y#
b0 x#
b0 w#
b0 v#
b0 u#
b0 t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
b0 l#
b0 k#
b0 j#
b0 i#
b0 h#
b0 g#
b0 f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
b0 I#
b0 H#
b0 G#
b0 F#
b0 E#
b0 D#
b0 C#
b0 B#
b0 A#
b0 @#
0?#
0>#
0=#
0<#
0;#
0:#
09#
b0 8#
b0 7#
b0 6#
b0 5#
b0 4#
b0 3#
b0 2#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
b0 s"
b0 r"
b0 q"
b0 p"
b0 o"
b0 n"
b0 m"
b0 l"
b0 k"
b0 j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
b0 b"
b0 a"
b0 `"
b0 _"
b0 ^"
b0 ]"
b0 \"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
b0 ?"
b0 >"
b0 ="
b0 <"
b0 ;"
b0 :"
b0 9"
b0 8"
b0 7"
b0 6"
05"
04"
03"
02"
01"
00"
0/"
b0 ."
b0 -"
b0 ,"
b0 +"
b0 *"
b0 )"
b0 ("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
b0 i
b0 h
b0 g
b0 f
b0 e
b0 d
b0 c
b0 b
b0 a
b0 `
0_
0^
0]
0\
0[
0Z
0Y
0X
b0 W
b0 V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
b0 K
0J
0I
0H
b0 G
b0 F
b0 E
b0 D
0C
0B
b0 A
b0 @
b0 ?
0>
0=
0<
0;
b0 :
b0 9
b0 8
b0 7
b0 6
bx 5
b0 4
b0 3
bx 2
bx 1
b11001010111100001110000 0
b110010101111000011100000101111101100101011110000111000000101110011000110111001101110110 /
b11001010111100001110000010111110110010001101001011001100110011000101110011000110111001101110110 .
b110010101111000011100000101111101100001011000110111010001110101011000010110110000101110011000110111001101110110 -
b0 ,
b0 +
0*
0)
0(
b0 '
b0 &
b0 %
0$
0#
0"
b0 !
$end
